// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCourierApi.Data;

#nullable disable

namespace WebCourierApi.Migrations
{
    [DbContext(typeof(WebCourierApiDbContext))]
    [Migration("20231119225223_MadeClientOwned")]
    partial class MadeClientOwned
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("WebCourierApi.Model.Inquire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<float>("HeightCM")
                        .HasColumnType("REAL");

                    b.Property<bool>("HighPriority")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LengthCM")
                        .HasColumnType("REAL");

                    b.Property<DateOnly>("PickupDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WeekendDelivery")
                        .HasColumnType("INTEGER");

                    b.Property<float>("WeightKG")
                        .HasColumnType("REAL");

                    b.Property<float>("WidthCM")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Inquiries");
                });

            modelBuilder.Entity("WebCourierApi.Model.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InquireId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("OfferStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InquireId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("WebCourierApi.Model.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InquireId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InquireId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("WebCourierApi.Model.Inquire", b =>
                {
                    b.OwnsOne("WebCourierApi.Model.Address", "DestinationAddress", b1 =>
                        {
                            b1.Property<int>("InquireId")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("ApartmentNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("BuildingNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Country")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Province")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Town")
                                .HasColumnType("TEXT");

                            b1.HasKey("InquireId");

                            b1.ToTable("Inquiries");

                            b1.WithOwner()
                                .HasForeignKey("InquireId");
                        });

                    b.OwnsOne("WebCourierApi.Model.Address", "PickupAddress", b1 =>
                        {
                            b1.Property<int>("InquireId")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("ApartmentNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("BuildingNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Country")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Province")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Town")
                                .HasColumnType("TEXT");

                            b1.HasKey("InquireId");

                            b1.ToTable("Inquiries");

                            b1.WithOwner()
                                .HasForeignKey("InquireId");
                        });

                    b.Navigation("DestinationAddress")
                        .IsRequired();

                    b.Navigation("PickupAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("WebCourierApi.Model.Offer", b =>
                {
                    b.HasOne("WebCourierApi.Model.Inquire", "Inquire")
                        .WithMany()
                        .HasForeignKey("InquireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("WebCourierApi.Model.Client", "Client", b1 =>
                        {
                            b1.Property<int>("OfferId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("CompanyName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("FirstName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .HasColumnType("TEXT");

                            b1.HasKey("OfferId");

                            b1.ToTable("Offers");

                            b1.WithOwner()
                                .HasForeignKey("OfferId");
                        });

                    b.OwnsOne("WebCourierApi.Model.Pricing", "Pricing", b1 =>
                        {
                            b1.Property<int>("OfferId")
                                .HasColumnType("INTEGER");

                            b1.Property<decimal>("BasePrice")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("FeesTotal")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("TaxesTotal")
                                .HasColumnType("TEXT");

                            b1.HasKey("OfferId");

                            b1.ToTable("Offers");

                            b1.WithOwner()
                                .HasForeignKey("OfferId");
                        });

                    b.Navigation("Client")
                        .IsRequired();

                    b.Navigation("Inquire");

                    b.Navigation("Pricing")
                        .IsRequired();
                });

            modelBuilder.Entity("WebCourierApi.Model.Proposal", b =>
                {
                    b.HasOne("WebCourierApi.Model.Inquire", "Inquire")
                        .WithMany("Proposals")
                        .HasForeignKey("InquireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("WebCourierApi.Model.Pricing", "Pricing", b1 =>
                        {
                            b1.Property<int>("ProposalId")
                                .HasColumnType("INTEGER");

                            b1.Property<decimal>("BasePrice")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("FeesTotal")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("TaxesTotal")
                                .HasColumnType("TEXT");

                            b1.HasKey("ProposalId");

                            b1.ToTable("Proposals");

                            b1.WithOwner()
                                .HasForeignKey("ProposalId");
                        });

                    b.Navigation("Inquire");

                    b.Navigation("Pricing")
                        .IsRequired();
                });

            modelBuilder.Entity("WebCourierApi.Model.Inquire", b =>
                {
                    b.Navigation("Proposals");
                });
#pragma warning restore 612, 618
        }
    }
}
