// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCourierApi.Data;

#nullable disable

namespace WebCourierApi.Migrations
{
    [DbContext(typeof(WebCourierApiDbContext))]
    [Migration("20231219221624_make_deliveryProcess_owned2")]
    partial class make_deliveryProcess_owned2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("WebCourierApi.Data.DeliveryPOCO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InquireId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("INTEGER");

                    b.ComplexProperty<Dictionary<string, object>>("Client", "WebCourierApi.Data.DeliveryPOCO.Client#Client", b1 =>
                        {
                            b1.Property<string>("CompanyName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("FirstName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .HasColumnType("TEXT");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Pricing", "WebCourierApi.Data.DeliveryPOCO.Pricing#Pricing", b1 =>
                        {
                            b1.Property<decimal>("BasePrice")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("FeesTotal")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("TaxesTotal")
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.HasIndex("InquireId")
                        .IsUnique();

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("WebCourierApi.Data.InquirePOCO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerKey")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("PickupDate")
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("DeliveryAddress", "WebCourierApi.Data.InquirePOCO.DeliveryAddress#Address", b1 =>
                        {
                            b1.Property<int?>("ApartmentNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("BuildingNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Town")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("TEXT");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("DeliveryOptions", "WebCourierApi.Data.InquirePOCO.DeliveryOptions#DeliveryOptions", b1 =>
                        {
                            b1.Property<bool>("HighPriority")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsForCompany")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("WeekendDelivery")
                                .HasColumnType("INTEGER");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Package", "WebCourierApi.Data.InquirePOCO.Package#Package", b1 =>
                        {
                            b1.Property<float>("HeightCM")
                                .HasColumnType("REAL");

                            b1.Property<float>("LengthCM")
                                .HasColumnType("REAL");

                            b1.Property<float>("WeightKG")
                                .HasColumnType("REAL");

                            b1.Property<float>("WidthCM")
                                .HasColumnType("REAL");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PickupAddress", "WebCourierApi.Data.InquirePOCO.PickupAddress#Address", b1 =>
                        {
                            b1.Property<int?>("ApartmentNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("BuildingNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Town")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.ToTable("Inquiries");
                });

            modelBuilder.Entity("WebCourierApi.Data.OfferPOCO", b =>
                {
                    b.Property<int>("InquireId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OfferNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("Pricing", "WebCourierApi.Data.OfferPOCO.Pricing#Pricing", b1 =>
                        {
                            b1.Property<decimal>("BasePrice")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("FeesTotal")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("TaxesTotal")
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("InquireId", "OfferNumber");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("WebCourierApi.Data.DeliveryPOCO", b =>
                {
                    b.HasOne("WebCourierApi.Data.InquirePOCO", "Inquire")
                        .WithOne("DeliveryRequest")
                        .HasForeignKey("WebCourierApi.Data.DeliveryPOCO", "InquireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("WebCourierApi.Model.DeliveryProcess", "Process", b1 =>
                        {
                            b1.Property<int>("DeliveryPOCOId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("CourierName")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("DeliveryTimestamp")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsDelivered")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Notes")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("PickupTimestamp")
                                .HasColumnType("TEXT");

                            b1.HasKey("DeliveryPOCOId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryPOCOId");
                        });

                    b.Navigation("Inquire");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("WebCourierApi.Data.OfferPOCO", b =>
                {
                    b.HasOne("WebCourierApi.Data.InquirePOCO", "Inquire")
                        .WithMany("Offers")
                        .HasForeignKey("InquireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inquire");
                });

            modelBuilder.Entity("WebCourierApi.Data.InquirePOCO", b =>
                {
                    b.Navigation("DeliveryRequest");

                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
